###BUILD###

# pull official base image
FROM python:3.8.0-alpine as builder

# set work directory
WORKDIR /usr/src/project

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# flake8
RUN pip install --upgrade pip
RUN pip install flake8
COPY . /usr/src/project
RUN flake8 --ignore=E402,E501,F401 .

# install dependencies
COPY ./requirements.txt /usr/src/project/requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/project/wheels -r requirements.txt

###FINAL IMAGE###

# pull official base image
FROM python:3.8.0-alpine

# create directory for web project user
RUN mkdir -p /home/project

# create project user
RUN addgroup -S project && adduser -S project -G project

# Create directories for user
ENV HOME=/home/project
ENV APP_HOME=/home/project/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/project/wheels /wheels
COPY --from=builder /usr/src/project/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy project
COPY . $APP_HOME

# chown all the files to the project user
RUN chown -R project:project $APP_HOME

# change to the project user
USER project

# run entrypoint.prod.sh
ENTRYPOINT ["/home/project/web/entrypoint.prod.sh"]
